name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main, master, feature/** ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint (black & flake8)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: black --check
        run: black --check .

      - name: flake8
        run: flake8 src tests

  unit:
    name: Unit tests + coverage
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Use .env.example
        run: cp .env.example .env

      - name: Run unit tests with coverage
        run: |
          pytest tests/unit --cov=src --cov-report=term-missing \
            --cov-report=xml:reports/coverage/coverage.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: reports/coverage/coverage.xml
          if-no-files-found: error
          retention-days: 7

  e2e:
    name: E2E (headless Chrome, xdist)
    runs-on: ubuntu-latest
    needs: unit

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install Google Chrome (Selenium Manager will automatically select the Chromedriver)
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-linux.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | \
            sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      - name: Use .env.example
        run: cp .env.example .env

      - name: Run smoke (HTML report)
        run: |
          pytest -m "smoke" --browser=chrome --headless \
            --html=reports/report.html --self-contained-html -n auto

      - name: Run e2e/regression (Allure)
        run: |
          pytest -m "e2e or regression" --browser=chrome --headless \
            --alluredir=reports/allure-results -n auto

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: reports/report.html
          if-no-files-found: warn
          retention-days: 7

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: reports/allure-results/
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload screenshots (on failures)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: artifacts/screenshots/
          if-no-files-found: ignore
          retention-days: 7

  # Generating and publishing an Allure report on GitHub Pages
  allure_pages:
    name: Publish Allure to GitHub Pages
    runs-on: ubuntu-latest
    needs: e2e

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      # Generate an Allure report using a ready-made action (there's already a CLI inside)
      - name: Generate Allure report
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          allure_report: allure-report
          keep_reports: 5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
